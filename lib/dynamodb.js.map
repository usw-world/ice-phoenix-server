{"version":3,"file":"dynamodb.js","names":["PARTITION_KEY","SORT_KEY","tableName","CheckUser","userKey","params","Statement","Parameters","S","ddbDocClient","send","ExecuteStatementCommand","data","Items","length","console","error","AddUser","N","L","log","GetData","gameData","level","sceneNo","clearCount","Array","from","adaptation","elmt","UpdateData","originData","Statements","BatchExecuteStatementCommand","t"],"sources":["../src/dynamodb.js"],"sourcesContent":["// import { QueryCommand, GetCommand } from \"@aws-sdk/lib-dynamodb\";\r\nimport { BatchExecuteStatementCommand, ExecuteStatementCommand } from \"@aws-sdk/client-dynamodb\";\r\nimport { ddbDocClient } from \"./ddbDocument\";\r\n\r\nconst PARTITION_KEY = \"userKey\";\r\nconst SORT_KEY = \"index\";\r\n\r\nconst tableName = \"ice-phoenix-user\";\r\n\r\nexport const CheckUser = async (userKey) => {\r\n  const params = {\r\n    Statement: `SELECT \"userKey\", \"index\" \r\n                FROM \"${tableName}\" \r\n                WHERE \"userKey\" = ?\r\n    `,\r\n    Parameters: [{ S: userKey }],\r\n  };\r\n  try {\r\n    const data = await ddbDocClient.send(new ExecuteStatementCommand(params));\r\n    if(data.Items.length > 0)  return false;\r\n    else                       return true;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return false;\r\n  }\r\n};\r\nexport const AddUser = async (userKey) => {\r\n  const params = {\r\n    Statement: `INSERT INTO \"${tableName}\"\r\n                VALUE {\r\n                  'userKey' : ?,\r\n                  'level' : ?,\r\n                  'sceneNo' : ?,\r\n                  'clearCount' : ?,\r\n                  'adaptation' : ?\r\n                }\r\n    `,\r\n    Parameters: [\r\n      { S: userKey },\r\n      { N: '1' },\r\n      { N: '0' },\r\n      { N: '0' },\r\n      { L: [{N: '0'}, {N: '0'}, {N: '0'}, {N: '0'}, {N: '0'}] },\r\n    ],\r\n  };\r\n  try {\r\n    await ddbDocClient.send(new ExecuteStatementCommand(params));\r\n    return true;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return false;\r\n  }\r\n};\r\nexport const GetData = async (userKey) => {\r\n  const params = {\r\n    Statement: `SELECT \"userKey\", \"level\", \"sceneNo\", \"clearCount\", \"adaptation\"\r\n                FROM \"${tableName}\"\r\n                WHERE \"userKey\" = ?\r\n    `,\r\n    Parameters: [{ S: userKey }]\r\n  }\r\n  try {\r\n    const data = await ddbDocClient.send(new ExecuteStatementCommand(params));\r\n    if(data.Items.length > 0) {\r\n      let gameData = {\r\n        \"userKey\" : data.Items[0].userKey.S,\r\n        \"level\" : data.Items[0].level.N,\r\n        \"sceneNo\" : data.Items[0].sceneNo.N,\r\n        \"clearCount\" : data.Items[0].clearCount.N,\r\n        \"adaptation\" : Array.from(data.Items[0].adaptation.L, elmt => elmt.N),\r\n      };\r\n      return gameData;\r\n    } else {\r\n      console.error(\"not found user data with 'userKey' that is sended by user.\");\r\n      return false;\r\n    }\r\n  } catch(err) {\r\n    console.log(\"Error In func::GetData\");\r\n    console.log(err);\r\n  }\r\n};\r\nexport const UpdateData = async (gameData) => {\r\n  const originData = await GetData(gameData.userKey);\r\n  if(originData.level > gameData.level\r\n  || originData.clearCount > gameData.clearCount) {\r\n    console.error(\"Server got the invaild data. Update process stoped.\");\r\n    return false;\r\n  }\r\n  const params = {\r\n    Statements: [{\r\n      Statement: `UPDATE \"${tableName}\"\r\n                  SET \"level\"=?, \"sceneNo\"=?, \"clearCount\"=?, \"adaptation\"=?\r\n                  WHERE \"userKey\"=?\r\n      `,\r\n      Parameters: [\r\n        { N: ''+gameData.level },\r\n        { N: ''+gameData.sceneNo },\r\n        { N: ''+gameData.clearCount },\r\n        { L: Array.from(gameData.adaptation, elmt => { return { N: ''+elmt }; }) },\r\n        { S: gameData.userKey },\r\n      ]\r\n    }]\r\n  };\r\n  try {\r\n    let t = await ddbDocClient.send(new BatchExecuteStatementCommand(params))\r\n    return true;\r\n  } catch(err) {\r\n    console.error(err);\r\n    return false;\r\n  }\r\n}"],"mappings":"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"}